#!/usr/bin/env bash

# This script backs up all important files to external hard drives.
# Apps that use a different backup / sync mechanism:
# - Brave Browser - Brave Sync
# - Dropbox - Most files are synced via Dropbox
# - iTerm - Via `../terminal` directory
# - Photos - iCloud
# - VS Code - GitHub Settings Sync


# For this script to work you need to give
# your Terminal access to the the file system at Settings > Security & Privacy

# To selectively restore files from the backup you can run
# rsync --archive --verbose /source /dest

set -eufo pipefail

today="$(date -u "+%Y-%m-%d")"
backupdir="/Volumes/4_tb_red_src/backups/${today}_macbook_2021"

paths=(
  .electron-cash/wallets
  .electrum/wallets
  .gnupg  # Alternatively: https://askubuntu.com/q/514534
  .local/bin  # All programs built with stack
  .local/share/fish
  .password-store
  .rclone.conf
  .s3cfg
  .serverlessrc
  .ssh
  .task
  .timewarrior
  Desktop
  Documents
  Downloads
  Dropbox
  Library/Application\ Support/midiStroke  # Mapping MIDI note to key combo
  Library/Application\ Support/Sublime\ Text\ 3/Packages/User
  Library/Fonts
  Library/Preferences
  Library/Services  # Automator scripts (e.g. quick actions)
  Library/Thunderbird/Profiles
  Movies
  Music
  Pictures/Photo\ Booth\ Library
  Pictures/Photos\ Library.photoslibrary
  Projects
  Wallets
)


if test -d "$backupdir"
then
  printf "\\n\\n"
  echo "Start backup to '$backupdir' …"
else
  if test -e "$backupdir"
  then
    printf "\\n\\n"
    echo "'$backupdir' is not a directory!"
    exit 1
  else
    mkdir -p "$backupdir"
  fi
fi


for path in "${paths[@]}"
do
  if test -d "$HOME/$path"
  then
    printf "\\n\\n"
    echo "Backing up directory '$HOME/$path' …"
    mkdir -p "$backupdir/$path"
    rsync \
      --archive \
      --delete \
      --verbose \
      --stats \
      --human-readable \
      --exclude '.Spotlight-V100' \
      --exclude '.Trashes' \
      "$HOME/$path/" \
      "$backupdir/$path/"

  elif test -f "$HOME/$path"
  then
    printf "\\n\\n"
    echo "Backing up file '$HOME/$path' …"
    rsync \
      --archive \
      --delete \
      --verbose \
      --stats \
      --human-readable \
      "$HOME/$path" \
      "$backupdir/$path"

  else
    printf "\\n\\n"
    echo "Error: '$HOME/$path' is not a valid path"
    exit 1
  fi
done


printf "\\n\\n"
echo "Backing up SD card …"
rsync \
  --archive \
  --delete \
  --verbose \
  --stats \
  --human-readable \
  --exclude '.Spotlight-V100' \
  --exclude '.Trashes' \
  "/Volumes/adrian_64gb/" \
  "/Volumes/4_tb_red_src/backups/${today}_adrian_64gb/"


sync-hdds
